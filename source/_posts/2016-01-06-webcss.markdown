---
layout: post
title: "前端开发之CSS背景"
date: 2016-01-06 10:00:59 +0800
comments: true
categories: [CSS,HTML]
---
>内容来源于网易微专业前端开发工程师课程以及W3CHTML

###CSS颜色值通常以下方式定义：
  
* 十六进制-如:"#ff0000" 或者 "#f00"
* RGB-如:"rgb(255,0,0)"
* 颜色名称-如:"red"
<!-- more -->

###[1.background-color]()
####语法
	background-color：<color>
	默认值：transparent
####取值
	<color>：指定颜色。
####说明
	1.设置或检索对象的背景颜色。
	2.当同时定义了背景颜色和背景图像时，背景图像覆盖在背景颜色之上。
	3.如果设置了background-image，同时也建议设置background-color用于当背景图像不可见时保持与文本一定的对比。
####兼容性（主要考虑IE）
	IE6.0及以上支持
####示例代码
```css   
div{
	background-color:#F00;	
	background-color:#rgb(255,0,0);
	background-color:#rgb(255,0,0,0.5);/*第四个参数为透明度*/
	backrgound-color:red;
	backrgound-color:transparent;/*默认值*/
}

```
###[2.background-image]()
####语法
	background-image：<bg-image>[,<bg-image>]*
	<bg-image> = none|<url>|<linear-gradient>|<radial-gradient>|<repeating-linear-gradient>|<repeating-radial-gradient>
	默认值：none
####取值
	none：无背景图。
	<url>：使用绝对或相对地址指定背景图像。
	<linear-gradient>：使用线性渐变创建背景图像。（CSS3）
	<radial-gradient>：使用径向(放射性)渐变创建背景图像。（CSS3）
	<repeating-linear-gradient>：使用重复的线性渐变创建背景图像。（CSS3）
	<repeating-radial-gradient>：使用重复的径向(放射性)渐变创建背景图像。（CSS3）
####说明
	1.设置或检索对象的背景图像。
	2.如果设置了background-image，同时也建议作者设置background-color用于当背景图像不可见时保持与文本一定的对比。
####兼容性（主要考虑IE）
	1.IE8及更早浏览器不支持CSS3 background-image，即不支持多背景和使用渐变作为背景图像。
	2.IE9不支持CSS3新增参数值：<linear-gradient>|<radial-gradient>|<repeating-linear-gradient>|<repeating-radial-gradient>作为背景图像。
####示例代码
```css  
/*2.background-image:<bg-image>[,<bg-image>]**/ 
/*<bg-image>=<image>|none*/ 
div{
	background-image:url("http://163.com/images/x.png");	
	background-image:url("/images/x.png");	
	background-image:url("../images/x.png");/*单引号也可以*/	
	background-image:url('../images/x.png'); /*引号不写也可以*/ 
	background-image:url(../images/x.png);/*先写的图片在上层，后写在下层，若加背景色，背景色在最下面一层*/
	background-image:url(red.png),url(blue.png);	
}
```
####[linear-gradient()]()
#####语法
	[[<angle>|to <side-or-corner>,]?<color-stop>[,<color-stop>]+
	<side-or-corner> = [left|right]|[top|bottom]
	<color-stop> = <color>[<percentage>|<length>]?
#####示例代码
```css
	background-image:linear-gradient(red,blue);/*默认to bottom*/
	background-image:linear-gradient(to top,red,blue);
	background-image:linear-gradient(to right bottom,red,blue);
	background-image:linear-gradient(0deg,red,blue);
	background-image:linear-gradient(45deg,red,blue);
	background-image:linear-gradient(red,green,blue);/*默认green从50%开始*/
	background-image:linear-gradient(red,green 20%,blue);
```
{% img /images/19.jpg 100 100 %}  {% img /images/20.jpg 100 100 %} {% img /images/21.jpg 100 100 %} {% img /images/22.jpg 100 100 %} {% img /images/23.jpg 100 100 %} {% img /images/24.jpg 100 100 %} {% img /images/25.jpg 100 100 %}
####[radial-gradient()]()
#####语法
	[ [ circle || <length> ] [ at <position> ]? , | 
	[ ellipse || [ <length> | <percentage> ] {2} ] [ at  <position> ]? , |
	[ [ circle || ellipse ] | | <extent-keyword> ] [ at  <position> ]? , | at <position> , ] ? <color-stop> [ , <color-stop> ]+
	< extent-keyword > = closest-side | farthest-side | closest-corner | farthest-corner
#####示例代码
```css
	background-image:radial-gradient(closest-side,red,blue);
	background-image:radial-gradient(circle,red,blue);/*椭圆和圆默认为farthest-corner*/
	background-image:radial-gradient(circle 100px,red,blue);
	background-image:radial-gradient(red,blue);
	background-image:radial-gradient(100px 50px,red,blue);
	background-image:radial-gradient(100px 50px at 0 0,red,blue);
	background-image:radial-gradient(red,green 20%,blue);
```
{% img /images/26.jpg 100 100 %} {% img /images/27.jpg 100 100 %} {% img /images/28.jpg 100 100 %} {% img /images/29.jpg 100 100 %} {% img /images/30.jpg 100 100 %} {% img /images/31.jpg 100 100 %} {% img /images/32.jpg 100 100 %}
####[repeating-linear-gradient()]() &nbsp;&nbsp;[repeating-radial-gradient()]()
#####示例代码
```css
	background-image:linear-gradient(red,blue 20px,red 40px);
	background-image:repeating-linear-gradient(red,blue 20px,red 40px);
	background-image:radial-gradient(red,blue 20px,red 40px);
	background-image:radial-gradient(red,blue);
	background-image:radial-gradient(100px 50px,red,blue);
	background-image:radial-gradient(100px 50px at 0 0,red,blue);
	background-image:radial-gradient(red,green 20%,blue);
```
{% img /images/33.jpg 100 100 %} {% img /images/34.jpg 100 100 %} {% img /images/35.jpg 100 100 %} {% img /images/36.jpg 100 100 %} 
###[3.background-repeat]()
####语法
	background-repeat：<repeat-style> [,<repeat-style>]*
	<repeat-style> = repeat-x | repeat-y | [repeat | space | round | no-repeat]{1,2}
	默认值：repeat
####取值
	repeat-x：背景图像在横向上平铺
	repeat-y：背景图像在纵向上平铺
	repeat：背景图像在横向和纵向平铺
	no-repeat：背景图像不平铺
	round：背景图像自动缩放直到适应且填充满整个容器。（CSS3）
	space：背景图像以相同的间距平铺且填充满整个容器或某个方向。（CSS3）
####说明
	1.设置或检索对象的背景图像如何铺排填充。必须先指定background-image属性。
	2.允许提供2个参数，如果提供全部2个参数，第1个用于横向，第二个用于纵向。
	3.如果只提供1个参数，则用于横向和纵向。特殊值repeat-x和repeat-y除外，因为repeat-x相当于repeat no-repeat，repeat-y相当于no-repeat repeat，即其实repeat-x和repeat-y等价于提供了2个参数值
	4.当引入多张图片时，background-repeat：<repeat-style> [,<repeat-style>]属性值以逗号隔开。
####兼容性（主要考虑IE）
	IE8及更早浏览器不支持为background-repeat定义2个参数值；不支持CSS3新增参数值round|space。
####示例代码
```css  
div{
	background-image: url('red.png');
	background-repeat: repeat-x;
	background-repeat: repeat-y;
	background-repeat: space;
	background-repeat: round;
	background-repeat: no-repeat;
}
```
###[4.background-attachment]()
####语法
	background-attachment：<attachment> [ , <attachment> ]*
	<attachment> = fixed | local | scroll
	默认值：scroll
####取值
	fixed：背景图像相对于窗体固定。
	scroll：背景图像相对于元素固定，也就是说当元素内容滚动时背景图像不会跟着滚动，因为背景图像总是要跟着元素本身。但会随元素的祖先元素或窗体一起滚动。
	local：背景图像相对于元素内容固定，也就是说当元素随元素滚动时背景图像也会跟着滚动，因为背景图像总是要跟着内容。（CSS3）
####说明
	设置或检索背景图像是随对象内容滚动还是固定的。必须先指background-image属性
####兼容性（主要考虑IE）
	IE8及更早浏览器不支持CSS3新增参数值：local
####示例代码
###[5.background-position]()
####语法
	background-position：<position> [ , <position> ]*
	<position> = [ left | center | right | top | bottom | <percentage> | <length> ] | [ left | center | right | <percentage> | <length> ] [ top | center | bottom | <percentage> | <length> ] | [ center | [ left | right ] [ <percentage> | <length> ]? ] && [ center | [ top | bottom ] [ <percentage> | <length> ]? ]
	默认值：0% 0%，效果等同于left top
####取值
	<percentage>：用百分比指定背景图像填充的位置。可以为负值。
	<length>：用长度值指定背景图像填充的位置。可以为负值。
	center：背景图像横向和纵向居中。
	left：背景图像在横向上填充从左边开始。
	right：背景图像在横向上填充从右边开始。
	top：背景图像在纵向上填充从顶部开始。
	bottom：背景图像在纵向上填充从底部开始。
####说明
	1.设置或检索对象的背景图像位置。必须先指定background-image属性。
	2.该属性提供2个参数值。
	3.如果提供两个，第一个用于横坐标，第二个用于纵坐标。
	4.如果只提供一个，该值将用于横坐标；纵坐标将默认为50%。
####兼容性（主要考虑IE）
	IE8及更早浏览器不支持CSS3 Background-position定义多组位置，只支持单组。
####示例代码
###[6.background-origin]()
####语法
	background-origin：<box> [ , <box> ]*
	<box> = border-box | padding-box | content-box
	默认值：padding-box
####取值
	padding-box：从padding区域（含padding）开始显示背景图像。
	border-box：从border区域（含border）开始显示背景图像。
	content-box：从content区域开始显示背景图像。
####说明
	设置或检索对象的背景图像计算background-position时的参考原点(位置)。
####兼容性（主要考虑IE）
	IE8及更早浏览器不支持
####示例代码
```css
	background-image:url(red.png);
	background-repeat:no-repeat;
	background-origin:padding-box;
	background-origin:border-box;
	background-origin:content-box;
```
{% img /images/37.jpg 200 200 %} {% img /images/38.jpg 200 200 %} {% img /images/39.jpg 200 200 %} 
###[6.background-clip]()
####语法
	background-clip：<box> [ , <box> ]*
	<box> = border-box | padding-box | content-box | text
	默认值：border-box
####取值
	padding-box：从padding区域（不含padding）开始向外裁剪背景。
	border-box：从border区域（不含border）开始向外裁剪背景。
	content-box：从content区域开始向外裁剪背景。
	text：从前景内容的形状（比如文字）作为裁剪区域向外裁剪，如此即可实现使用背景作为填充色之类的遮罩效果。
####说明
	指定对象的背景图像向外裁剪的区域。
####兼容性（主要考虑IE）
	IE8及更早浏览器不支持,IE9部分支持
####示例代码
```css
	background-image:url(red.png);
	background-clip:border-box;
	background-clip:padding-box;
	background-clip:content-box;
```
{% img /images/40.jpg 200 200 %} {% img /images/41.jpg 200 200 %}  
{% img /images/42.jpg 200 200 %} {% img /images/43.jpg 200 200 %} 
###[7.background-size]()
####语法
	background-size：<bg-size> [ , <bg-size> ]*
	<bg-size> = [ <length> | <percentage> | auto ]{1,2} | cover | contain
	默认值：auto
####取值
	<length>：用长度值指定背景图像大小。不允许负值。
	<percentage>：用百分比指定背景图像大小。不允许负值。
	auto：背景图像的真实大小。
	cover：将背景图像等比缩放到完全覆盖容器，背景图像有可能超出容器。
	contain：将背景图像等比缩放到宽度或高度与容器的宽度或高度相等，背景图像始终被包含在容器内。
####说明
	1.检索或设置对象的背景图像的尺寸大小。
	2.该属性提供2个参数值(特性值cover和contain除外)。
	3.如果提供两个，第一个用于定义背景图像的宽度，第二个用于定义背景图像的高度。
	4.如果只提供一个，该值将用于定义背景图像的宽度，第2个值默认为auto，即高度为auto，此时背景图以提供的宽度作为参照来进行等比缩放。
####兼容性（主要考虑IE）
	IE8及更早浏览器不支持
####示例代码
```css
	background-image:url(red.png);
	background-repeat:no-repeat;
	background-position:50% 50%;
	background-size:auto;
	background-size:20px 20px;
	background-size:50% 50%;
	background-size:cover;
	background-size:contain;
```
{% img /images/44.jpg 100 100 %} {% img /images/45.jpg 100 100 %} {% img /images/46.jpg 100 100 %} {% img /images/47.jpg 100 100 %} {% img /images/48.jpg 100 100 %}
###[8.background]()
####语法
	background：[<bg-layer>,] *<final-bg-layer>
	<bg-layer> = <bg-image> || <position> [/<bg-size>]? || <repeat-style> || <attachment> ||<box> || <box>
	<final-bg-layer> = <bg-layer> || <'background-color'>
####示例代码
```css
	background:url(red.png) 0 0/20px 20px no-repeat;
	background:url(red.png) 0 0/20px 20px no-repeat,url(blue.png) 50% 50%/contain no-repeat content-box green;
```
{% img /images/49.jpg 100 100 %} {% img /images/50.jpg 100 100 %} 


